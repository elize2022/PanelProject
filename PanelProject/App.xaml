<Application x:Class="PanelProject.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PanelProject"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Image x:Key="Image.Up" Source="images/switchUp.png"/>
        <Image x:Key="Image.Down" Source="images/switchDown.png"/>
        <Image x:Key="Image.Socket" Source="images/socket.png"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ButtonLamp.Static.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonLamp.Static.Border" Color="Black"/>
        <SolidColorBrush x:Key="ButtonLamp.MouseOver.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonLamp.MouseOver.Border" Color="Black"/>
        <SolidColorBrush x:Key="ButtonLamp.Pressed.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonLamp.Pressed.Border" Color="Black"/>
        <SolidColorBrush x:Key="ButtonLamp.Disabled.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonLamp.Disabled.Border" Color="Black"/>
        <SolidColorBrush x:Key="ButtonLamp.Disabled.Foreground" Color="Red"/>

        <SolidColorBrush x:Key="ButtonRectGOn.Static.Background" Color="#FF12E812"/>
        <SolidColorBrush x:Key="ButtonRectGOn.Static.Border" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOn.MouseOver.Background" Color="#FF12E812"/>
        <SolidColorBrush x:Key="ButtonRectGOn.MouseOver.Border" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOn.Pressed.Background" Color="#FF12E812"/>
        <SolidColorBrush x:Key="ButtonRectGOn.Pressed.Border" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOn.Disabled.Background" Color="#FF12E812"/>
        <SolidColorBrush x:Key="ButtonRectGOn.Disabled.Border" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOn.Disabled.Foreground" Color="#FF12E812"/>

        <SolidColorBrush x:Key="ButtonRectGOff.Static.Background" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOff.Static.Border" Color="DarkGreen"/>
        <SolidColorBrush x:Key="ButtonRectGOff.MouseOver.Background" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOff.MouseOver.Border" Color="DarkGreen"/>
        <SolidColorBrush x:Key="ButtonRectGOff.Pressed.Background" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOff.Pressed.Border" Color="DarkGreen"/>
        <SolidColorBrush x:Key="ButtonRectGOff.Disabled.Background" Color="Green"/>
        <SolidColorBrush x:Key="ButtonRectGOff.Disabled.Border" Color="DarkGreen"/>
        <SolidColorBrush x:Key="ButtonRectGOff.Disabled.Foreground" Color="Green"/>

        <SolidColorBrush x:Key="ButtonRectROn.Static.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonRectROn.Static.Border" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROn.MouseOver.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonRectROn.MouseOver.Border" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROn.Pressed.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonRectROn.Pressed.Border" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROn.Disabled.Background" Color="Red"/>
        <SolidColorBrush x:Key="ButtonRectROn.Disabled.Border" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROn.Disabled.Foreground" Color="Red"/>

        <SolidColorBrush x:Key="ButtonRectROff.Static.Background" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROff.Static.Border" Color="#FF520303"/>
        <SolidColorBrush x:Key="ButtonRectROff.MouseOver.Background" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROff.MouseOver.Border" Color="#FF520303"/>
        <SolidColorBrush x:Key="ButtonRectROff.Pressed.Background" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROff.Pressed.Border" Color="#FF520303"/>
        <SolidColorBrush x:Key="ButtonRectROff.Disabled.Background" Color="DarkRed"/>
        <SolidColorBrush x:Key="ButtonRectROff.Disabled.Border" Color="#FF520303"/>
        <SolidColorBrush x:Key="ButtonRectROff.Disabled.Foreground" Color="DarkRed"/>

        <SolidColorBrush x:Key="Button.Static.Background" Color="LightGray"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="LightGray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="LightGray"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="LightGray"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="LightGray"/>

        <Style x:Key="RoundButton" TargetType="{x:Type Button}">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10" />
                </Style>
            </Style.Resources>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Background" Value="Red" />
            <Setter Property="Content" Value=""/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonLamp.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonLamp.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonLamp.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonLamp.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonLamp.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonLamp.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonLamp.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundLampOn" TargetType="{x:Type Ellipse}">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Fill" Value="Red"/>
            <Setter Property="Margin" Value="10" />
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>

        <Style x:Key="RoundLampOff" TargetType="{x:Type Ellipse}">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Fill" Value="LightGray"/>
            <Setter Property="Margin" Value="10" />
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>

        <Style x:Key="RectangleLampGreenOn" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Background" Value="#FF12E812" />
            <Setter Property="Content" Value=""/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Green"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectGOn.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectGOn.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectGOn.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectGOn.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectGOn.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectGOn.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonRectGOn.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangleLampGreenOff" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Background" Value="Green" />
            <Setter Property="Content" Value=""/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="DarkGreen"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectGOff.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectGOff.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectGOff.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectGOff.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectGOff.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectGOff.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonRectGOff.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangleLampRedOn" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Background" Value="Red" />
            <Setter Property="Content" Value=""/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="DarkRed"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectROn.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectROn.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectROn.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectROn.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectROn.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectROn.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonRectROn.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangleLampRedOff" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Background" Value="DarkRed" />
            <Setter Property="Content" Value=""/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#FF520303"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectROff.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectROff.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectROff.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectROff.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRectROff.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonRectROff.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonRectROff.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Content" Value=""/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MainWindowButton" TargetType="{x:Type Button}">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="6" />
                    
                </Style>
            </Style.Resources>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="285"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="Gray"/>
        </Style>

        <Style x:Key="PanelLabel" TargetType="{x:Type Label}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="RoundGreenLampOn" TargetType="{x:Type Ellipse}">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Fill" Value="#FF12E812"/>
            <Setter Property="Margin" Value="10" />
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>

        <Style x:Key="RoundGreenLampOff" TargetType="{x:Type Ellipse}">
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Fill" Value="#FFB3B30F"/>
            <Setter Property="Margin" Value="10" />
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>

        <Style x:Key="RoundLampWithRingOn" TargetType="{x:Type Button}">

            <Setter Property="Width" Value="23"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="IsEnabled" Value="False"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas Height="23" Width="23">
                            <Ellipse Fill="Red" Height="23" Width="23" StrokeThickness="1" Stroke="Black"/>
                            <Ellipse Fill="Red" Height="12" Width="12" StrokeThickness="2" Stroke="White" Canvas.Left="5.5" Canvas.Top="5.5"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="RoundLampWithRingOff" TargetType="{x:Type Button}">

            <Setter Property="Width" Value="23"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="IsEnabled" Value="False"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas Height="23" Width="23">
                            <Ellipse Fill="Red" Height="23" Width="23" StrokeThickness="1" Stroke="Black"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="RectangleLampGreenOnOnDiff" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Content" Value=""/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="45"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2" Height="45" Width="45">
                            <StackPanel>
                                <Grid Background="White">
                                    <Label Content="ГОТОВ" Style="{StaticResource PanelLabel}" FontWeight="Normal" FontSize="8"/>
                                </Grid>
                                <GridSplitter BorderBrush="Black" BorderThickness="1" ShowsPreview="False" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="False" />
                                <Grid Background="#FF12E812">
                                    <Label Content="ВКЛ" Style="{StaticResource PanelLabel}" FontWeight="Normal" FontSize="8"/>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangleLampGreenOnOffDiff" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Content" Value=""/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="45"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2" Height="45" Width="45">
                            <StackPanel>
                                <Grid Background="White">
                                    <Label Content="ГОТОВ" Style="{StaticResource PanelLabel}" FontWeight="Normal" FontSize="8"/>
                                </Grid>
                                <GridSplitter BorderBrush="Black" BorderThickness="1" ShowsPreview="False" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="False" />
                                <Grid Background="DarkGreen">
                                    <Label Content="ВКЛ" Style="{StaticResource PanelLabel}" FontWeight="Normal" FontSize="8"/>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangleLampGreenOffDiff" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Content" Value=""/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="45"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2" Height="45" Width="45">
                            <StackPanel>
                                <Grid Background="LightGray">
                                    <Label Content="ГОТОВ" Style="{StaticResource PanelLabel}" FontWeight="Normal" FontSize="8"/>
                                </Grid>
                                <GridSplitter BorderBrush="Black" BorderThickness="1" ShowsPreview="False" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="False" />
                                <Grid Background="DarkGreen">
                                    <Label Content="ВКЛ" Style="{StaticResource PanelLabel}" FontWeight="Normal" FontSize="8"/>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="switchButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="socketButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="IsEnabled" Value="False"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas Height="20" Width="20">
                            <Ellipse Fill="White" Height="20" Width="20" StrokeThickness="2" Stroke="Black"/>
                            <Ellipse Fill="Black" Height="8" Width="8" Canvas.Left="5.8" Canvas.Top="5.8"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
